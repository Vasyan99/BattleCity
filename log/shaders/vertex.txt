#version 460 //версия шейдера, которую будем использовать
layout(location = 0) in vec3 vertex_position; //входные данные, которые получает наш шейдер. позиция вертекса и его цвет в нашем случае
layout(location = 1) in vec3 vertex_color;
out vec3 color; //выходные данные. цвет. пойдёт на вход фрагментному шейдеру
void main() {
   color = vertex_color; //фрагментный шейдер получит интерполированное значение из этой переменной
   gl_Position = vec4(vertex_position, 1.0); // обозначает позицию вертекса, который потом пойдёт на выход. Должна быть в нормированных координатах. Четвёртая компонента - перспектива
}